<configuration>
    <!-- 项目名称 -->
    <contextName>hcimg</contextName>
    <!-- 属性 -->
    <property name="USER_HOME" value="./log"/>

  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <!-- encoders are assigned the type
         ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->
    <encoder>
      <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
    </encoder>
  </appender>

  <!-- 滚动日志文件，这个比较常用 -->
  <appender name="ROLLINGFILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <!-- 当project等于true的时候file就不会起效果-->
    <prudent>true</prudent>
    <!--<file>${USER_HOME}/logFile.log</file>-->
    <!-- 按天新建log日志 -->
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!-- daily rollover -->
      <fileNamePattern>${USER_HOME}/logFile.%d{yyyy-MM-dd}_%i.log</fileNamePattern>
      <!-- 保留30天的历史日志 -->
      <maxHistory>30</maxHistory>

      <!-- 基于大小和时间，这个可以有，可以没有 -->
      <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
        <!-- or whenever the file size reaches 100MB -->
        <!-- 当一个日志大小大于10KB，则换一个新的日志。日志名的%i从0开始，自动递增 -->
        <maxFileSize>100000KB</maxFileSize>
      </timeBasedFileNamingAndTriggeringPolicy>
    </rollingPolicy>

    <encoder>
      <!-- %ex就是指抛出的异常，full是显示全部，如果在{}中写入数字，则表示展示多少行 -->
      <pattern>%-4date [%thread] %-5level %logger{35} - %msg%n%ex{full, DISPLAY_EX_EVAL}</pattern>
    </encoder>
  </appender>


  <root level="debug">
    <appender-ref ref="STDOUT" />
    <appender-ref ref="ROLLINGFILE" />
  </root>
</configuration>